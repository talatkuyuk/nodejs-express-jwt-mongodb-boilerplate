/users:
  get:
    summary: Get the list of users within a paginary
    tags: [Users]
    security:
      - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/query-param-page'
      - $ref: '#/components/parameters/query-param-size'
      - $ref: '#/components/parameters/query-param-sort'
      - $ref: '#/components/parameters/query-param-email'
      - $ref: '#/components/parameters/query-param-role'
      - $ref: '#/components/parameters/query-param-name'
      - $ref: '#/components/parameters/query-param-gender'
      - $ref: '#/components/parameters/query-param-country'
    responses:
      200:
        description: The list of the users with paginary info
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  value: true
                data:
                  type: object
                  properties:
                    users:
                      type: array
                      items:
                        $ref: '#/components/schemas/user'
                    totalCount:
                      type: number
                    pagination:
                      type: object
                      properties:
                        currentPage:
                          type: number
                        totalPages:
                          type: number
                        perPage:
                          type: number
            examples:
              _:
                $ref: '#/components/examples/response-query-users'
      401:
        $ref: '#/components/responses/AuthenticateMiddlewareUnauthorizedErrors'
      403:
        $ref: '#/components/responses/AuthenticateAndAuthorizeMiddlewaresForbiddenErrors'
      422:
        $ref: '#/components/responses/UserQueryParamsValidationErrors'
      500:
        $ref: '#/components/responses/InternalServerError'


/users/{id}:
  parameters:
    - $ref: '#/components/parameters/param-user-id'

  get:
    summary: Get an user
    tags: [Users]
    security:
      - BearerAuth: []
    responses:
      200:
        description: The user info
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  value: true
                data:
                  type: object
                  properties:
                    user:
                      $ref: '#/components/schemas/user'
                      example:
                        $ref: '#components/examples/response-user'
      401:
        $ref: '#/components/responses/AuthenticateMiddlewareUnauthorizedErrors'
      403:
        $ref: '#/components/responses/AuthenticateAndAuthorizeMiddlewaresForbiddenErrors'
      404:
        $ref: '#/components/responses/NoUserFound'
      422:
        $ref: '#/components/responses/ParamIdValidationError'
      500:
        $ref: '#/components/responses/InternalServerError'

  post:
    summary: Add an user
    tags: [Users]
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/form-add-user'
        application/json:
          schema:
            $ref: '#/components/schemas/form-add-user'
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  value: true
                data:
                  type: object
                  properties:
                    user:
                      $ref: '#/components/schemas/user'
                      example:
                        $ref: '#components/examples/response-user'
      401:
        $ref: '#/components/responses/AuthenticateMiddlewareUnauthorizedErrors'
      403:
        $ref: '#/components/responses/AuthenticateAndAuthorizeMiddlewaresForbiddenErrors'
      422:
        $ref: '#/components/responses/AddUserValidationErrors'
      500:
        $ref: '#/components/responses/InternalServerError'

  put:
    summary: Update an user
    tags: [Users]
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/form-update-user'
        application/json:
          schema:
            $ref: '#/components/schemas/form-update-user'
    responses:
      200:
        $ref: '#/components/responses/SuccessResponse'
      401:
        $ref: '#/components/responses/AuthenticateMiddlewareUnauthorizedErrors'
      403:
        $ref: '#/components/responses/AuthenticateAndAuthorizeMiddlewaresForbiddenErrors'
      404:
        $ref: '#/components/responses/NoUserFound'
      422:
        $ref: '#/components/responses/UpdateUserValidationErrors'
      500:
        $ref: '#/components/responses/InternalServerError'

  patch:
    summary: Change the user role
    tags: [Users]
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/form-change-role'
        application/json:
          schema:
            $ref: '#/components/schemas/form-change-role'
    responses:
      200:
        $ref: '#/components/responses/SuccessResponse'
      401:
        $ref: '#/components/responses/AuthenticateMiddlewareUnauthorizedErrors'
      403:
        $ref: '#/components/responses/AuthenticateAndAuthorizeMiddlewaresForbiddenErrors'
      404:
        $ref: '#/components/responses/NoUserFound'
      422:
        $ref: '#/components/responses/ChangeRoleValidationErrors'
      500:
        $ref: '#/components/responses/InternalServerError'

  delete:
    summary: Delete an user
    tags: [Users]
    security:
      - BearerAuth: []
    responses:
      200:
        $ref: '#/components/responses/SuccessResponse'
      401:
        $ref: '#/components/responses/AuthenticateMiddlewareUnauthorizedErrors'
      403:
        $ref: '#/components/responses/AuthenticateAndAuthorizeMiddlewaresForbiddenErrors'
      404:
        $ref: '#/components/responses/NoUserFound'
      422:
        $ref: '#/components/responses/ParamIdValidationError'
      500:
        $ref: '#/components/responses/InternalServerError'
